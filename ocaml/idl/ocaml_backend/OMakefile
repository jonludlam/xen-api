# -----------------------------------------------------------------------
# autogen stuff
# -----------------------------------------------------------------------

# should move this into global constants file in root and stop using
# relative paths...
XAPI_DIR = ../../xapi
AUTOGEN_HELPER_DIR = ../../database
CLIENT_DIR = ../../xapi-client
APICOMMON_DIR = ../../xapi-types

OCAMLINCLUDES += ../.. ../../database $(XAPI_DIR) ../../xapi ../../client_records ../../util

OCAMLPACKS += sexpr xml-light2 http-svr rpclib stunnel

CAMLP4_FILES = event_types

UseCamlp4(rpclib.syntax, $(CAMLP4_FILES))

# only gen_api requires datamodel library:
GEN_API_FILES = gen_api gen_test genOCaml ocaml_syntax gen_db_actions gen_db_check gen_empty_custom gen_client gen_server gen_common gen_rbac ../../database/escaping locking ../api_lowlevel gen_api_main $(AUTOGEN_HELPER_DIR)/string_marshall_helper
OCAML_LIBS += ../xapi-consts ../xapi-datamodel 
OCamlProgram(gen_api_main, $(GEN_API_FILES))

FILTER = closed # or opensource or closed or debug or implementation

$(CLIENT_DIR)/client.ml: gen_api_main $(APICOMMON_DIR)/aPI.ml
	./gen_api_main -filterinternal true -filter $(FILTER) -mode client   > $(CLIENT_DIR)/client.ml

$(APICOMMON_DIR)/aPI.ml: gen_api_main
	./gen_api_main -filterinternal true -filter $(FILTER) -mode api   > $(APICOMMON_DIR)/aPI.ml

$(XAPI_DIR)/server.ml: gen_api_main $(APICOMMON_DIR)/aPI.ml
	./gen_api_main -filterinternal true -gendebug -filter $(FILTER) -mode server   > $(XAPI_DIR)/server.ml

$(XAPI_DIR)/db_actions.ml: gen_api_main $(APICOMMON_DIR)/aPI.ml
	./gen_api_main -filterinternal false -filter nothing -mode db       > $(XAPI_DIR)/db_actions.ml   # note: we do not filter internal fields/messages here

$(XAPI_DIR)/custom_actions.ml: gen_api_main $(APICOMMON_DIR)/aPI.ml
	./gen_api_main -filterinternal true -filter $(FILTER) -mode actions  > $(XAPI_DIR)/custom_actions.ml

$(XAPI_DIR)/rbac_static.ml: gen_api_main $(APICOMMON_DIR)/aPI.ml
	./gen_api_main -filterinternal true -filter $(FILTER) -mode rbac   > $(XAPI_DIR)/rbac_static.ml

$(XAPI_DIR)/rbac_static.csv: gen_api_main $(APICOMMON_DIR)/aPI.ml
	./gen_api_main -filterinternal true -gendebug -filter $(FILTER) -mode rbac   > $(XAPI_DIR)/rbac_static.csv

.PHONY:autogen_idl
autogen_idl: $(CLIENT_DIR)/client.ml $(APICOMMON_DIR)/aPI.ml $(XAPI_DIR)/server.ml \
	$(XAPI_DIR)/db_actions.ml $(XAPI_DIR)/custom_actions.ml \
	$(XAPI_DIR)/rbac_static.ml $(XAPI_DIR)/rbac_static.csv

# -----------------------------------------------------------------------
# programs that depend on autogen files
# -----------------------------------------------------------------------

CLIENT_OBJS = $(CLIENT_DIR)/client event_helper tasks

XAPI_CLIENT_OBJS = \
	../../util/xapi_version \
	../../xapi/xapi_inventory \
	../../xapi/xapi_fist \
	../../xapi/features \
	$(CLIENT_OBJS)

_OCAMLPACKS = $(OCAMLPACKS)
OCAMLPACKS = 

#OCamlLibrary(client, $(CLIENT_OBJS))
#OCamlLibrary(xapi_client, $(XAPI_CLIENT_OBJS))

OCamlLibrary(htmldoc, htmldoc)

OCAMLPACKS=$(_OCAMLPACKS)

.PHONY: clean
clean:
	rm -f *~ $(CLEAN_OBJS) *.opt *.run doc/* xmlrpc_doc/* aPI.ml client.ml server.ml rbac_static.ml rbac_static.csv gen_api gen_api.run gen_api.opt write_out_api write_out_client write_out_db_actions write_out_server gen_api_main

.PHONY: lib-install
META: META.in
	sed 's/@VERSION@/$(PRODUCT_VERSION)/g' < $< > $@

INSTALL_PATH = $(DESTDIR)/$(shell ocamlfind printconf destdir)
export

DATAMODEL_PACK_DIR=/tmp/xapi-datamodel

lib-install: META
	mkdir -p $(INSTALL_PATH)/stublibs
	ocamlfind install -destdir $(INSTALL_PATH) -ldconf ignore xapi-client META $(addsuffixes .cmi, $(XAPI_CLIENT_OBJS)) $(if $(BYTE_ENABLED), xapi_client.cma) $(if $(NATIVE_ENABLED), xapi_client.cmxa xapi_client.a $(addsuffixes .cmx, $(XAPI_CLIENT_OBJS)))

.PHONY: lib-uninstall
lib-uninstall:
	ocamlfind remove -destdir $(INSTALL_PATH) xapi-client

